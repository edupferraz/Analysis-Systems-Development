/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ads.poo;

import java.util.ArrayList;
import java.util.Comparator;
import java.util.Scanner;
import java.util.Stack;

public class App {
    public static void main(String[] args) {
        /*
        ArrayList<String> nomes = new ArrayList<>();

        String s = "Juca";

        nomes.add(s);
        nomes.add("Eduardo");
        nomes.add("Teste");

        System.out.println(nomes);


        if (!nomes.isEmpty()) {
            nomes.clear();
        }


        nomes.remove(s);
        System.out.println(nomes);


        // coerção de tipos ou typecasting
        String[] v = (String[]) nomes.toArray();



        // for i
        for (int i = 0; nomes.size() > i; i++) {
            System.out.println("Nome: " + nomes.get(i));
        }

        // for each
        for (String elemento :nomes){
            System.out.println("Nome: " + elemento);
        }

        // usando lambda
        nomes.forEach(elemento -> System.out.println("Nome -> " + elemento));

        // method reference
        nomes.forEach(System.out::println);
       */

        // Pedir para o usuário digitar números o teclado, enquanto ele não inserir o número 999; Caso insira 999, para a execução, finaliza a leitura e imprime ordenado

        /*
        ArrayList<Integer> listaNumeros = new ArrayList<>();
        Scanner scanner = new Scanner(System.in);
        int numeroInserido = scanner.nextInt();

        while(numeroInserido != 999) {
            listaNumeros.add(numeroInserido);
            numeroInserido = scanner.nextInt();
        }

        listaNumeros.sort(Comparator.naturalOrder());
        System.out.println(listaNumeros);

         */

        Stack<Integer> listaNumeros = new Stack<>();
        Scanner scanner = new Scanner(System.in);
        int numeroInserido = scanner.nextInt();

        while(numeroInserido != 999) {
            listaNumeros.add(numeroInserido);
            numeroInserido = scanner.nextInt();
        }

        while(!listaNumeros.isEmpty()) {
            System.out.println(listaNumeros.pop());
        }

    }
}
